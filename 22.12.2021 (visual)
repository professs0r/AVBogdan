import math                                                         # для математических инструментов
import plotly                                                       # для визуализации
import plotly.graph_objs as go                                      # для визуализации
import plotly.express as px                                         # для визуализации
from plotly.subplots import make_subplots                           # для визуализации
import pandas as pd                                                 # просто Пандас
import numpy as np                                                  # просто Нумпай
from plotly.graph_objs import Scatter, Layout                       # для визуализации
pd.options.plotting.backend = "plotly"                              # для визуализации

##############################################################################################################
##############################################################################################################
##############################################################################################################
##############################################################################################################
##################################### ЗАДЁМ ПАРАМЕТРЫ ВИЗУАЛИЗАЦИИ ###########################################
##############################################################################################################
##############################################################################################################
##############################################################################################################
##############################################################################################################

x_source = [1]                                                     #координаты исчточника ЭЭ по оси X
y_source = [1]                                                     #координаты исчточника ЭЭ по оси Y
x_nodes = [4, 29, 54, 4, 29, 54, 4, 29, 54]                        #координаты узлов по оси X
y_nodes = [4, 4, 4, 29, 29, 29, 54, 54, 54]                        #координаты узлов по оси Y
x_TP = [7, 32, 57, 57]                                             # координаты трансформаторных подстанций по оси Х
y_TP = [51, 26, 1, 51]                                             # координаты трансформаторных подстанций по оси У
df_nodes = pd.DataFrame(x_nodes, y_nodes)                          # создаём датафрейм из координат узлов, для отображения на графике
df_source = pd.DataFrame(x_source, y_source)                       # создаём датафрейм из координат источников ЭЭ, для отображения на графике
df_TP = pd.DataFrame(x_TP, y_TP)                                   # создаём датафрейм из координат трансформаторных подстанций, для отображения на графике
df_lines = pd.DataFrame(x_nodes, y_nodes)
# задаём параметры для отображения узлов на графике
data_nodes_on_plan = go.Scatter( x = x_nodes,
                                 y = y_nodes,
                                 mode = 'markers+text',
                                 name = "Узел",
                                 text = "точка",
                                 texttemplate = "(%{x:.2f}, %{y:.2f})",
                                 textposition = "top center",
                                 marker=dict(size=15, colorbar=dict(title="Для ЭПУ"), colorscale="Inferno")
                                 )
# задаём параметры для отображения источников ЭЭ на графике
data_source_on_plan = go.Scatter( x = x_source,
                                  y = y_source,
                                  mode = 'markers+text',
                                  name = "Источник ЭЭ",
                                  text = "точка",
                                  texttemplate = "(%{x:.2f}, %{y:.2f})",
                                  textposition = "top center",
                                  marker=dict(size=20)
                                  )

# задаём параметры для отображения трансформаторных подстанций на графике
data_TP_on_plan = go.Scatter( x = x_TP,
                              y = y_TP,
                              mode = 'markers+text',
                              name = "Трансформаторная подстанция",
                              text = "точка",
                              texttemplate = "(%{x:.2f}, %{y:.2f})",
                              textposition = "top center",
                              marker=dict(size=20)
                              )

# задаём параметры для отображения линий на графике
data_lines_on_plan = go.Scatter( x = x_nodes,
                                 y = y_nodes,
                                 mode = 'lines'
                                )

##############################################################################################################
##############################################################################################################
##############################################################################################################
##############################################################################################################
##################################### СТРОИМ ВИЗУАЛИЗАЦИЮ ####################################################
##############################################################################################################
##############################################################################################################
##############################################################################################################
##############################################################################################################

fig = go.Figure()                                         # создаём объект для визуализации
#fig = make_subplots(rows=1, cols=2)                      # позволяет создавать несколько графиков рядом
fig.add_trace(data_nodes_on_plan)                         # подгружаем одно в другое для корректной работы (узлы)
fig.add_trace(data_source_on_plan)                        # подгружаем одно в другое для корректной работы (источники ЭЭ)
fig.add_trace(data_TP_on_plan)                            # подгружаем одно в другое для корректной работы (трансформаторные подстанции)
fig.add_trace(data_lines_on_plan)                         # подгружаем одно в другое для корректной работы (линии)
fig.update_xaxes(title_text='Ось ХХХХХХХХХХХХ')           # обзываем ось Х
fig.update_yaxes(title_text='Ось УУУУУУУУУУУУ')           # обзываем ось У
# параметры отображения графика вцелом
fig.update_layout(height = 800,
                  width = 1600,
                  legend_orientation="h",
                  title_text="План местности")
# задаём параметры для подписей точек
fig.update_traces(hoverinfo="all",
                  hovertemplate="Координата Х: %{x}<br>Координата Y: %{y}")

# строим график
fig.show()
